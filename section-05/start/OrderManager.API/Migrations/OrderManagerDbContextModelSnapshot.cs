// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManager.DbContexts;

#nullable disable

namespace OrderManager.API.Migrations
{
    [DbContext(typeof(OrderManagerDbContext))]
    partial class OrderManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderManager.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Office gadgets and laptops",
                            OrderDate = new DateTime(2024, 6, 20, 10, 36, 35, 737, DateTimeKind.Local).AddTicks(8748),
                            OrderTotal = 2200.00m,
                            Title = "Office Supplies"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Personal use gadgets",
                            OrderDate = new DateTime(2024, 6, 19, 10, 36, 35, 737, DateTimeKind.Local).AddTicks(8821),
                            OrderTotal = 800.00m,
                            Title = "Personal Tech"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Assorted tech gadgets",
                            OrderDate = new DateTime(2024, 6, 18, 10, 36, 35, 737, DateTimeKind.Local).AddTicks(8828),
                            OrderTotal = 1240.00m,
                            Title = "Tech Gear"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Gaming and audio",
                            OrderDate = new DateTime(2024, 6, 17, 10, 36, 35, 737, DateTimeKind.Local).AddTicks(8830),
                            OrderTotal = 1020.00m,
                            Title = "Entertainment Bundle"
                        });
                });

            modelBuilder.Entity("OrderManager.Entities.OrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            Details = "Laptop for office use",
                            OrderId = 1,
                            Price = 1200.00m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1,
                            Details = "Smartphone for personal use",
                            OrderId = 2,
                            Price = 800.00m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2,
                            Details = "Tablet for on-the-go entertainment",
                            OrderId = 3,
                            Price = 300.00m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1,
                            Details = "Smartwatch to stay connected",
                            OrderId = 3,
                            Price = 200.00m,
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("OrderManager.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "High performance laptop",
                            Name = "Laptop",
                            Price = 1200.00m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 800.00m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Portable touchscreen tablet",
                            Name = "Tablet",
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Wearable smart device",
                            Name = "Smartwatch",
                            Price = 200.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Electronic book reader",
                            Name = "E-Reader",
                            Price = 150.00m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Bluetooth earphones",
                            Name = "Wireless Earbuds",
                            Price = 90.00m
                        },
                        new
                        {
                            Id = 7,
                            Description = "Virtual reality headset",
                            Name = "VR Headset",
                            Price = 350.00m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Compact, durable camera",
                            Name = "Action Camera",
                            Price = 400.00m
                        },
                        new
                        {
                            Id = 9,
                            Description = "Wearable activity tracker",
                            Name = "Fitness Tracker",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = 10,
                            Description = "Wireless, durable speaker",
                            Name = "Portable Speaker",
                            Price = 120.00m
                        },
                        new
                        {
                            Id = 11,
                            Description = "Home video game console",
                            Name = "Gaming Console",
                            Price = 500.00m
                        },
                        new
                        {
                            Id = 12,
                            Description = "Remote-controlled drone",
                            Name = "Drone",
                            Price = 600.00m
                        });
                });

            modelBuilder.Entity("OrderManager.Entities.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Vendors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Tech Lane",
                            Email = "contact@techsupplies.com",
                            Name = "Tech Supplies Inc."
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Gadget St.",
                            Email = "info@gadgetsworld.com",
                            Name = "Gadgets World"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Tech Park",
                            Email = "sales@globaltech.com",
                            Name = "Global Tech"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1011 Innovation Drive",
                            Email = "contact@innovatechsolutions.com",
                            Name = "Innovatech Solutions"
                        },
                        new
                        {
                            Id = 5,
                            Address = "1213 Gadget Ave",
                            Email = "support@gadgetplanet.com",
                            Name = "Gadget Planet"
                        },
                        new
                        {
                            Id = 6,
                            Address = "1415 Trendy St",
                            Email = "info@techtrends.com",
                            Name = "Tech Trends"
                        },
                        new
                        {
                            Id = 7,
                            Address = "1617 Electronics Blvd",
                            Email = "help@electronix.com",
                            Name = "Electronix"
                        });
                });

            modelBuilder.Entity("ProductVendor", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("VendorsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "VendorsId");

                    b.HasIndex("VendorsId");

                    b.ToTable("ProductVendor");
                });

            modelBuilder.Entity("OrderManager.Entities.OrderLine", b =>
                {
                    b.HasOne("OrderManager.Entities.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderManager.Entities.Product", "Product")
                        .WithMany("OrderLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductVendor", b =>
                {
                    b.HasOne("OrderManager.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderManager.Entities.Vendor", null)
                        .WithMany()
                        .HasForeignKey("VendorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderManager.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("OrderManager.Entities.Product", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
